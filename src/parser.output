State 82 conflicts: 10 shift/reduce
State 113 conflicts: 2 shift/reduce
State 142 conflicts: 10 shift/reduce
State 144 conflicts: 10 shift/reduce
State 157 conflicts: 10 shift/reduce
State 165 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 decs funcs

    3 $@2: %empty

    4 decs: type $@2 id_list ';' decs
    5     | %empty

    6 type: INT
    7     | FLOAT
    8     | DOUBLE
    9     | CHAR
   10     | VOID

   11 $@3: %empty

   12 type: STRUCT $@3 '{' decs '}'

   13 id_list: id_list ',' ID type_arr
   14        | ID type_arr

   15 type_arr: '[' NUMERO ']' type_arr
   16         | %empty

   17 funcs: FUNC type ID '(' params ')' '{' decs sents '}' funcs
   18      | %empty

   19 params: param_list
   20       | %empty

   21 $@4: %empty

   22 param_list: param_list ',' type $@4 ID param_arr

   23 $@5: %empty

   24 param_list: type $@5 ID param_arr

   25 param_arr: '[' ']' param_arr
   26          | %empty

   27 sents: sents sents
   28      | FOR '(' sents ';' logical ';' sents ')' sents
   29      | DO sents WHILE '(' logical ')' ';'
   30      | WHILE '(' logical ')' sents
   31      | IF '(' logical ')' sents
   32      | IF '(' logical ')' sents ELSE sents
   33      | SWITCH '(' expression ')' '{' cases case_def '}'
   34      | BREAK ';'
   35      | PRINT expression ';'
   36      | RETURN expression ';'
   37      | RETURN ';'
   38      | '{' sents '}'
   39      | ids '=' expression ';'

   40 ids: ID
   41    | arrays
   42    | ID '.' ID

   43 arrays: ID '[' expression ']'
   44       | arrays '[' expression ']'

   45 cases: CASE ':' NUMERO sents cases
   46      | %empty

   47 case_def: DEFAULT ':' sents
   48         | %empty

   49 expression: expression '*' expression
   50           | expression '/' expression
   51           | expression '+' expression
   52           | expression '-' expression
   53           | expression '%' expression
   54           | ids
   55           | CADENA
   56           | NUMERO
   57           | FLOTANTE
   58           | CARACTER
   59           | ID '(' arguments ')'

   60 arguments: arguments ',' expression
   61          | expression

   62 logical: logical OR logical
   63        | logical AND logical
   64        | '!' logical
   65        | '(' logical ')'
   66        | expression relation expression
   67        | TRUE_P
   68        | FALSE_P

   69 relation: EQ
   70         | NEQ
   71         | GE
   72         | '>'
   73         | LE
   74         | '<'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 53
'(' (40) 17 28 29 30 31 32 33 59 65
')' (41) 17 28 29 30 31 32 33 59 65
'*' (42) 49
'+' (43) 51
',' (44) 13 22 60
'-' (45) 52
'.' (46) 42
'/' (47) 50
':' (58) 45 47
';' (59) 4 28 29 34 35 36 37 39
'<' (60) 74
'=' (61) 39
'>' (62) 72
'[' (91) 15 25 43 44
']' (93) 15 25 43 44
'{' (123) 12 17 33 38
'}' (125) 12 17 33 38
error (256)
INT (258) 6
DOUBLE (259) 8
FLOAT (260) 7
CHAR (261) 9
VOID (262) 10
STRUCT (263) 12
CARACTER (264) 58
NUMERO (265) 15 45 56
FLOTANTE (266) 57
CADENA (267) 55
SWITCH (268) 33
CASE (269) 45
BREAK (270) 34
DEFAULT (271) 47
FOR (272) 28
IF (273) 31 32
ELSE (274) 32
DO (275) 29
WHILE (276) 29 30
FUNC (277) 17
RETURN (278) 36 37
PRINT (279) 35
TRUE_P (280) 67
FALSE_P (281) 68
ID (282) 13 14 17 22 24 40 42 43 59
LE (283) 73
GE (284) 71
EQ (285) 69
NEQ (286) 70
AND (287) 63
OR (288) 62
IFX (289)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 2, on right: 0
$@1 (56)
    on left: 1, on right: 2
decs (57)
    on left: 4 5, on right: 2 4 12 17
$@2 (58)
    on left: 3, on right: 4
type (59)
    on left: 6 7 8 9 10 12, on right: 4 17 22 24
$@3 (60)
    on left: 11, on right: 12
id_list (61)
    on left: 13 14, on right: 4 13
type_arr (62)
    on left: 15 16, on right: 13 14 15
funcs (63)
    on left: 17 18, on right: 2 17
params (64)
    on left: 19 20, on right: 17
param_list (65)
    on left: 22 24, on right: 19 22
$@4 (66)
    on left: 21, on right: 22
$@5 (67)
    on left: 23, on right: 24
param_arr (68)
    on left: 25 26, on right: 22 24 25
sents (69)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39, on right: 17 27
    28 29 30 31 32 38 45 47
ids (70)
    on left: 40 41 42, on right: 39 54
arrays (71)
    on left: 43 44, on right: 41 44
cases (72)
    on left: 45 46, on right: 33 45
case_def (73)
    on left: 47 48, on right: 33
expression (74)
    on left: 49 50 51 52 53 54 55 56 57 58 59, on right: 33 35 36 39
    43 44 49 50 51 52 53 60 61 66
arguments (75)
    on left: 60 61, on right: 59 60
logical (76)
    on left: 62 63 64 65 66 67 68, on right: 28 29 30 31 32 62 63 64
    65
relation (77)
    on left: 69 70 71 72 73 74, on right: 66


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . decs funcs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 5 (decs)

    decs  go to state 10
    type  go to state 11


State 3

    0 $accept: program $end .

    $default  accept


State 4

    6 type: INT .

    $default  reduce using rule 6 (type)


State 5

    8 type: DOUBLE .

    $default  reduce using rule 8 (type)


State 6

    7 type: FLOAT .

    $default  reduce using rule 7 (type)


State 7

    9 type: CHAR .

    $default  reduce using rule 9 (type)


State 8

   10 type: VOID .

    $default  reduce using rule 10 (type)


State 9

   12 type: STRUCT . $@3 '{' decs '}'

    $default  reduce using rule 11 ($@3)

    $@3  go to state 12


State 10

    2 program: $@1 decs . funcs

    FUNC  shift, and go to state 13

    $default  reduce using rule 18 (funcs)

    funcs  go to state 14


State 11

    4 decs: type . $@2 id_list ';' decs

    $default  reduce using rule 3 ($@2)

    $@2  go to state 15


State 12

   12 type: STRUCT $@3 . '{' decs '}'

    '{'  shift, and go to state 16


State 13

   17 funcs: FUNC . type ID '(' params ')' '{' decs sents '}' funcs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    type  go to state 17


State 14

    2 program: $@1 decs funcs .

    $default  reduce using rule 2 (program)


State 15

    4 decs: type $@2 . id_list ';' decs

    ID  shift, and go to state 18

    id_list  go to state 19


State 16

   12 type: STRUCT $@3 '{' . decs '}'

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 5 (decs)

    decs  go to state 20
    type  go to state 11


State 17

   17 funcs: FUNC type . ID '(' params ')' '{' decs sents '}' funcs

    ID  shift, and go to state 21


State 18

   14 id_list: ID . type_arr

    '['  shift, and go to state 22

    $default  reduce using rule 16 (type_arr)

    type_arr  go to state 23


State 19

    4 decs: type $@2 id_list . ';' decs
   13 id_list: id_list . ',' ID type_arr

    ';'  shift, and go to state 24
    ','  shift, and go to state 25


State 20

   12 type: STRUCT $@3 '{' decs . '}'

    '}'  shift, and go to state 26


State 21

   17 funcs: FUNC type ID . '(' params ')' '{' decs sents '}' funcs

    '('  shift, and go to state 27


State 22

   15 type_arr: '[' . NUMERO ']' type_arr

    NUMERO  shift, and go to state 28


State 23

   14 id_list: ID type_arr .

    $default  reduce using rule 14 (id_list)


State 24

    4 decs: type $@2 id_list ';' . decs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 5 (decs)

    decs  go to state 29
    type  go to state 11


State 25

   13 id_list: id_list ',' . ID type_arr

    ID  shift, and go to state 30


State 26

   12 type: STRUCT $@3 '{' decs '}' .

    $default  reduce using rule 12 (type)


State 27

   17 funcs: FUNC type ID '(' . params ')' '{' decs sents '}' funcs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 20 (params)

    type        go to state 31
    params      go to state 32
    param_list  go to state 33


State 28

   15 type_arr: '[' NUMERO . ']' type_arr

    ']'  shift, and go to state 34


State 29

    4 decs: type $@2 id_list ';' decs .

    $default  reduce using rule 4 (decs)


State 30

   13 id_list: id_list ',' ID . type_arr

    '['  shift, and go to state 22

    $default  reduce using rule 16 (type_arr)

    type_arr  go to state 35


State 31

   24 param_list: type . $@5 ID param_arr

    $default  reduce using rule 23 ($@5)

    $@5  go to state 36


State 32

   17 funcs: FUNC type ID '(' params . ')' '{' decs sents '}' funcs

    ')'  shift, and go to state 37


State 33

   19 params: param_list .
   22 param_list: param_list . ',' type $@4 ID param_arr

    ','  shift, and go to state 38

    $default  reduce using rule 19 (params)


State 34

   15 type_arr: '[' NUMERO ']' . type_arr

    '['  shift, and go to state 22

    $default  reduce using rule 16 (type_arr)

    type_arr  go to state 39


State 35

   13 id_list: id_list ',' ID type_arr .

    $default  reduce using rule 13 (id_list)


State 36

   24 param_list: type $@5 . ID param_arr

    ID  shift, and go to state 40


State 37

   17 funcs: FUNC type ID '(' params ')' . '{' decs sents '}' funcs

    '{'  shift, and go to state 41


State 38

   22 param_list: param_list ',' . type $@4 ID param_arr

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    type  go to state 42


State 39

   15 type_arr: '[' NUMERO ']' type_arr .

    $default  reduce using rule 15 (type_arr)


State 40

   24 param_list: type $@5 ID . param_arr

    '['  shift, and go to state 43

    $default  reduce using rule 26 (param_arr)

    param_arr  go to state 44


State 41

   17 funcs: FUNC type ID '(' params ')' '{' . decs sents '}' funcs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 5 (decs)

    decs  go to state 45
    type  go to state 11


State 42

   22 param_list: param_list ',' type . $@4 ID param_arr

    $default  reduce using rule 21 ($@4)

    $@4  go to state 46


State 43

   25 param_arr: '[' . ']' param_arr

    ']'  shift, and go to state 47


State 44

   24 param_list: type $@5 ID param_arr .

    $default  reduce using rule 24 (param_list)


State 45

   17 funcs: FUNC type ID '(' params ')' '{' decs . sents '}' funcs

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 58
    ids     go to state 59
    arrays  go to state 60


State 46

   22 param_list: param_list ',' type $@4 . ID param_arr

    ID  shift, and go to state 61


State 47

   25 param_arr: '[' ']' . param_arr

    '['  shift, and go to state 43

    $default  reduce using rule 26 (param_arr)

    param_arr  go to state 62


State 48

   33 sents: SWITCH . '(' expression ')' '{' cases case_def '}'

    '('  shift, and go to state 63


State 49

   34 sents: BREAK . ';'

    ';'  shift, and go to state 64


State 50

   28 sents: FOR . '(' sents ';' logical ';' sents ')' sents

    '('  shift, and go to state 65


State 51

   31 sents: IF . '(' logical ')' sents
   32      | IF . '(' logical ')' sents ELSE sents

    '('  shift, and go to state 66


State 52

   29 sents: DO . sents WHILE '(' logical ')' ';'

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 67
    ids     go to state 59
    arrays  go to state 60


State 53

   30 sents: WHILE . '(' logical ')' sents

    '('  shift, and go to state 68


State 54

   36 sents: RETURN . expression ';'
   37      | RETURN . ';'

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73
    ';'       shift, and go to state 74

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 76


State 55

   35 sents: PRINT . expression ';'

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 77


State 56

   40 ids: ID .
   42    | ID . '.' ID
   43 arrays: ID . '[' expression ']'

    '['  shift, and go to state 78
    '.'  shift, and go to state 79

    $default  reduce using rule 40 (ids)


State 57

   38 sents: '{' . sents '}'

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 80
    ids     go to state 59
    arrays  go to state 60


State 58

   17 funcs: FUNC type ID '(' params ')' '{' decs sents . '}' funcs
   27 sents: sents . sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57
    '}'     shift, and go to state 81

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 59

   39 sents: ids . '=' expression ';'

    '='  shift, and go to state 83


State 60

   41 ids: arrays .
   44 arrays: arrays . '[' expression ']'

    '['  shift, and go to state 84

    $default  reduce using rule 41 (ids)


State 61

   22 param_list: param_list ',' type $@4 ID . param_arr

    '['  shift, and go to state 43

    $default  reduce using rule 26 (param_arr)

    param_arr  go to state 85


State 62

   25 param_arr: '[' ']' param_arr .

    $default  reduce using rule 25 (param_arr)


State 63

   33 sents: SWITCH '(' . expression ')' '{' cases case_def '}'

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 86


State 64

   34 sents: BREAK ';' .

    $default  reduce using rule 34 (sents)


State 65

   28 sents: FOR '(' . sents ';' logical ';' sents ')' sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 87
    ids     go to state 59
    arrays  go to state 60


State 66

   31 sents: IF '(' . logical ')' sents
   32      | IF '(' . logical ')' sents ELSE sents

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    TRUE_P    shift, and go to state 88
    FALSE_P   shift, and go to state 89
    ID        shift, and go to state 73
    '('       shift, and go to state 90
    '!'       shift, and go to state 91

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 92
    logical     go to state 93


State 67

   27 sents: sents . sents
   29      | DO sents . WHILE '(' logical ')' ';'

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 94
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 68

   30 sents: WHILE '(' . logical ')' sents

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    TRUE_P    shift, and go to state 88
    FALSE_P   shift, and go to state 89
    ID        shift, and go to state 73
    '('       shift, and go to state 90
    '!'       shift, and go to state 91

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 92
    logical     go to state 95


State 69

   58 expression: CARACTER .

    $default  reduce using rule 58 (expression)


State 70

   56 expression: NUMERO .

    $default  reduce using rule 56 (expression)


State 71

   57 expression: FLOTANTE .

    $default  reduce using rule 57 (expression)


State 72

   55 expression: CADENA .

    $default  reduce using rule 55 (expression)


State 73

   40 ids: ID .
   42    | ID . '.' ID
   43 arrays: ID . '[' expression ']'
   59 expression: ID . '(' arguments ')'

    '['  shift, and go to state 78
    '('  shift, and go to state 96
    '.'  shift, and go to state 79

    $default  reduce using rule 40 (ids)


State 74

   37 sents: RETURN ';' .

    $default  reduce using rule 37 (sents)


State 75

   54 expression: ids .

    $default  reduce using rule 54 (expression)


State 76

   36 sents: RETURN expression . ';'
   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    ';'  shift, and go to state 102


State 77

   35 sents: PRINT expression . ';'
   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    ';'  shift, and go to state 103


State 78

   43 arrays: ID '[' . expression ']'

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 104


State 79

   42 ids: ID '.' . ID

    ID  shift, and go to state 105


State 80

   27 sents: sents . sents
   38      | '{' sents . '}'

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57
    '}'     shift, and go to state 106

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 81

   17 funcs: FUNC type ID '(' params ')' '{' decs sents '}' . funcs

    FUNC  shift, and go to state 13

    $default  reduce using rule 18 (funcs)

    funcs  go to state 107


State 82

   27 sents: sents . sents
   27      | sents sents .

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    SWITCH    [reduce using rule 27 (sents)]
    BREAK     [reduce using rule 27 (sents)]
    FOR       [reduce using rule 27 (sents)]
    IF        [reduce using rule 27 (sents)]
    DO        [reduce using rule 27 (sents)]
    WHILE     [reduce using rule 27 (sents)]
    RETURN    [reduce using rule 27 (sents)]
    PRINT     [reduce using rule 27 (sents)]
    ID        [reduce using rule 27 (sents)]
    '{'       [reduce using rule 27 (sents)]
    $default  reduce using rule 27 (sents)

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 83

   39 sents: ids '=' . expression ';'

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 108


State 84

   44 arrays: arrays '[' . expression ']'

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 109


State 85

   22 param_list: param_list ',' type $@4 ID param_arr .

    $default  reduce using rule 22 (param_list)


State 86

   33 sents: SWITCH '(' expression . ')' '{' cases case_def '}'
   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    ')'  shift, and go to state 110


State 87

   27 sents: sents . sents
   28      | FOR '(' sents . ';' logical ';' sents ')' sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    ';'     shift, and go to state 111
    '{'     shift, and go to state 57

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 88

   67 logical: TRUE_P .

    $default  reduce using rule 67 (logical)


State 89

   68 logical: FALSE_P .

    $default  reduce using rule 68 (logical)


State 90

   65 logical: '(' . logical ')'

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    TRUE_P    shift, and go to state 88
    FALSE_P   shift, and go to state 89
    ID        shift, and go to state 73
    '('       shift, and go to state 90
    '!'       shift, and go to state 91

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 92
    logical     go to state 112


State 91

   64 logical: '!' . logical

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    TRUE_P    shift, and go to state 88
    FALSE_P   shift, and go to state 89
    ID        shift, and go to state 73
    '('       shift, and go to state 90
    '!'       shift, and go to state 91

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 92
    logical     go to state 113


State 92

   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression
   66 logical: expression . relation expression

    LE   shift, and go to state 114
    GE   shift, and go to state 115
    EQ   shift, and go to state 116
    NEQ  shift, and go to state 117
    '>'  shift, and go to state 118
    '<'  shift, and go to state 119
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    relation  go to state 120


State 93

   31 sents: IF '(' logical . ')' sents
   32      | IF '(' logical . ')' sents ELSE sents
   62 logical: logical . OR logical
   63        | logical . AND logical

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    ')'  shift, and go to state 123


State 94

   29 sents: DO sents WHILE . '(' logical ')' ';'
   30      | WHILE . '(' logical ')' sents

    '('  shift, and go to state 124


State 95

   30 sents: WHILE '(' logical . ')' sents
   62 logical: logical . OR logical
   63        | logical . AND logical

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    ')'  shift, and go to state 125


State 96

   59 expression: ID '(' . arguments ')'

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 126
    arguments   go to state 127


State 97

   51 expression: expression '+' . expression

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 128


State 98

   52 expression: expression '-' . expression

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 129


State 99

   53 expression: expression '%' . expression

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 130


State 100

   49 expression: expression '*' . expression

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 131


State 101

   50 expression: expression '/' . expression

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 132


State 102

   36 sents: RETURN expression ';' .

    $default  reduce using rule 36 (sents)


State 103

   35 sents: PRINT expression ';' .

    $default  reduce using rule 35 (sents)


State 104

   43 arrays: ID '[' expression . ']'
   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    ']'  shift, and go to state 133


State 105

   42 ids: ID '.' ID .

    $default  reduce using rule 42 (ids)


State 106

   38 sents: '{' sents '}' .

    $default  reduce using rule 38 (sents)


State 107

   17 funcs: FUNC type ID '(' params ')' '{' decs sents '}' funcs .

    $default  reduce using rule 17 (funcs)


State 108

   39 sents: ids '=' expression . ';'
   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    ';'  shift, and go to state 134


State 109

   44 arrays: arrays '[' expression . ']'
   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101
    ']'  shift, and go to state 135


State 110

   33 sents: SWITCH '(' expression ')' . '{' cases case_def '}'

    '{'  shift, and go to state 136


State 111

   28 sents: FOR '(' sents ';' . logical ';' sents ')' sents

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    TRUE_P    shift, and go to state 88
    FALSE_P   shift, and go to state 89
    ID        shift, and go to state 73
    '('       shift, and go to state 90
    '!'       shift, and go to state 91

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 92
    logical     go to state 137


State 112

   62 logical: logical . OR logical
   63        | logical . AND logical
   65        | '(' logical . ')'

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    ')'  shift, and go to state 138


State 113

   62 logical: logical . OR logical
   63        | logical . AND logical
   64        | '!' logical .

    AND  shift, and go to state 121
    OR   shift, and go to state 122

    AND       [reduce using rule 64 (logical)]
    OR        [reduce using rule 64 (logical)]
    $default  reduce using rule 64 (logical)


State 114

   73 relation: LE .

    $default  reduce using rule 73 (relation)


State 115

   71 relation: GE .

    $default  reduce using rule 71 (relation)


State 116

   69 relation: EQ .

    $default  reduce using rule 69 (relation)


State 117

   70 relation: NEQ .

    $default  reduce using rule 70 (relation)


State 118

   72 relation: '>' .

    $default  reduce using rule 72 (relation)


State 119

   74 relation: '<' .

    $default  reduce using rule 74 (relation)


State 120

   66 logical: expression relation . expression

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 139


State 121

   63 logical: logical AND . logical

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    TRUE_P    shift, and go to state 88
    FALSE_P   shift, and go to state 89
    ID        shift, and go to state 73
    '('       shift, and go to state 90
    '!'       shift, and go to state 91

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 92
    logical     go to state 140


State 122

   62 logical: logical OR . logical

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    TRUE_P    shift, and go to state 88
    FALSE_P   shift, and go to state 89
    ID        shift, and go to state 73
    '('       shift, and go to state 90
    '!'       shift, and go to state 91

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 92
    logical     go to state 141


State 123

   31 sents: IF '(' logical ')' . sents
   32      | IF '(' logical ')' . sents ELSE sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 142
    ids     go to state 59
    arrays  go to state 60


State 124

   29 sents: DO sents WHILE '(' . logical ')' ';'
   30      | WHILE '(' . logical ')' sents

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    TRUE_P    shift, and go to state 88
    FALSE_P   shift, and go to state 89
    ID        shift, and go to state 73
    '('       shift, and go to state 90
    '!'       shift, and go to state 91

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 92
    logical     go to state 143


State 125

   30 sents: WHILE '(' logical ')' . sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 144
    ids     go to state 59
    arrays  go to state 60


State 126

   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression
   61 arguments: expression .

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 61 (arguments)


State 127

   59 expression: ID '(' arguments . ')'
   60 arguments: arguments . ',' expression

    ','  shift, and go to state 145
    ')'  shift, and go to state 146


State 128

   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   51           | expression '+' expression .
   52           | expression . '-' expression
   53           | expression . '%' expression

    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 51 (expression)


State 129

   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   52           | expression '-' expression .
   53           | expression . '%' expression

    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 52 (expression)


State 130

   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression
   53           | expression '%' expression .

    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    '%'  error (nonassociative)

    $default  reduce using rule 53 (expression)


State 131

   49 expression: expression . '*' expression
   49           | expression '*' expression .
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression

    $default  reduce using rule 49 (expression)


State 132

   49 expression: expression . '*' expression
   50           | expression . '/' expression
   50           | expression '/' expression .
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression

    $default  reduce using rule 50 (expression)


State 133

   43 arrays: ID '[' expression ']' .

    $default  reduce using rule 43 (arrays)


State 134

   39 sents: ids '=' expression ';' .

    $default  reduce using rule 39 (sents)


State 135

   44 arrays: arrays '[' expression ']' .

    $default  reduce using rule 44 (arrays)


State 136

   33 sents: SWITCH '(' expression ')' '{' . cases case_def '}'

    CASE  shift, and go to state 147

    $default  reduce using rule 46 (cases)

    cases  go to state 148


State 137

   28 sents: FOR '(' sents ';' logical . ';' sents ')' sents
   62 logical: logical . OR logical
   63        | logical . AND logical

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    ';'  shift, and go to state 149


State 138

   65 logical: '(' logical ')' .

    $default  reduce using rule 65 (logical)


State 139

   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression
   66 logical: expression relation expression .

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 66 (logical)


State 140

   62 logical: logical . OR logical
   63        | logical . AND logical
   63        | logical AND logical .

    $default  reduce using rule 63 (logical)


State 141

   62 logical: logical . OR logical
   62        | logical OR logical .
   63        | logical . AND logical

    AND  shift, and go to state 121

    $default  reduce using rule 62 (logical)


State 142

   27 sents: sents . sents
   31      | IF '(' logical ')' sents .
   32      | IF '(' logical ')' sents . ELSE sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    ELSE    shift, and go to state 150
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    SWITCH    [reduce using rule 31 (sents)]
    BREAK     [reduce using rule 31 (sents)]
    FOR       [reduce using rule 31 (sents)]
    IF        [reduce using rule 31 (sents)]
    DO        [reduce using rule 31 (sents)]
    WHILE     [reduce using rule 31 (sents)]
    RETURN    [reduce using rule 31 (sents)]
    PRINT     [reduce using rule 31 (sents)]
    ID        [reduce using rule 31 (sents)]
    '{'       [reduce using rule 31 (sents)]
    $default  reduce using rule 31 (sents)

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 143

   29 sents: DO sents WHILE '(' logical . ')' ';'
   30      | WHILE '(' logical . ')' sents
   62 logical: logical . OR logical
   63        | logical . AND logical

    AND  shift, and go to state 121
    OR   shift, and go to state 122
    ')'  shift, and go to state 151


State 144

   27 sents: sents . sents
   30      | WHILE '(' logical ')' sents .

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    SWITCH    [reduce using rule 30 (sents)]
    BREAK     [reduce using rule 30 (sents)]
    FOR       [reduce using rule 30 (sents)]
    IF        [reduce using rule 30 (sents)]
    DO        [reduce using rule 30 (sents)]
    WHILE     [reduce using rule 30 (sents)]
    RETURN    [reduce using rule 30 (sents)]
    PRINT     [reduce using rule 30 (sents)]
    ID        [reduce using rule 30 (sents)]
    '{'       [reduce using rule 30 (sents)]
    $default  reduce using rule 30 (sents)

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 145

   60 arguments: arguments ',' . expression

    CARACTER  shift, and go to state 69
    NUMERO    shift, and go to state 70
    FLOTANTE  shift, and go to state 71
    CADENA    shift, and go to state 72
    ID        shift, and go to state 73

    ids         go to state 75
    arrays      go to state 60
    expression  go to state 152


State 146

   59 expression: ID '(' arguments ')' .

    $default  reduce using rule 59 (expression)


State 147

   45 cases: CASE . ':' NUMERO sents cases

    ':'  shift, and go to state 153


State 148

   33 sents: SWITCH '(' expression ')' '{' cases . case_def '}'

    DEFAULT  shift, and go to state 154

    $default  reduce using rule 48 (case_def)

    case_def  go to state 155


State 149

   28 sents: FOR '(' sents ';' logical ';' . sents ')' sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 156
    ids     go to state 59
    arrays  go to state 60


State 150

   32 sents: IF '(' logical ')' sents ELSE . sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 157
    ids     go to state 59
    arrays  go to state 60


State 151

   29 sents: DO sents WHILE '(' logical ')' . ';'
   30      | WHILE '(' logical ')' . sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    ';'     shift, and go to state 158
    '{'     shift, and go to state 57

    sents   go to state 144
    ids     go to state 59
    arrays  go to state 60


State 152

   49 expression: expression . '*' expression
   50           | expression . '/' expression
   51           | expression . '+' expression
   52           | expression . '-' expression
   53           | expression . '%' expression
   60 arguments: arguments ',' expression .

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '%'  shift, and go to state 99
    '*'  shift, and go to state 100
    '/'  shift, and go to state 101

    $default  reduce using rule 60 (arguments)


State 153

   45 cases: CASE ':' . NUMERO sents cases

    NUMERO  shift, and go to state 159


State 154

   47 case_def: DEFAULT . ':' sents

    ':'  shift, and go to state 160


State 155

   33 sents: SWITCH '(' expression ')' '{' cases case_def . '}'

    '}'  shift, and go to state 161


State 156

   27 sents: sents . sents
   28      | FOR '(' sents ';' logical ';' sents . ')' sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57
    ')'     shift, and go to state 162

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 157

   27 sents: sents . sents
   32      | IF '(' logical ')' sents ELSE sents .

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    SWITCH    [reduce using rule 32 (sents)]
    BREAK     [reduce using rule 32 (sents)]
    FOR       [reduce using rule 32 (sents)]
    IF        [reduce using rule 32 (sents)]
    DO        [reduce using rule 32 (sents)]
    WHILE     [reduce using rule 32 (sents)]
    RETURN    [reduce using rule 32 (sents)]
    PRINT     [reduce using rule 32 (sents)]
    ID        [reduce using rule 32 (sents)]
    '{'       [reduce using rule 32 (sents)]
    $default  reduce using rule 32 (sents)

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 158

   29 sents: DO sents WHILE '(' logical ')' ';' .

    $default  reduce using rule 29 (sents)


State 159

   45 cases: CASE ':' NUMERO . sents cases

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 163
    ids     go to state 59
    arrays  go to state 60


State 160

   47 case_def: DEFAULT ':' . sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 164
    ids     go to state 59
    arrays  go to state 60


State 161

   33 sents: SWITCH '(' expression ')' '{' cases case_def '}' .

    $default  reduce using rule 33 (sents)


State 162

   28 sents: FOR '(' sents ';' logical ';' sents ')' . sents

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    sents   go to state 165
    ids     go to state 59
    arrays  go to state 60


State 163

   27 sents: sents . sents
   45 cases: CASE ':' NUMERO sents . cases

    SWITCH  shift, and go to state 48
    CASE    shift, and go to state 147
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    $default  reduce using rule 46 (cases)

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60
    cases   go to state 166


State 164

   27 sents: sents . sents
   47 case_def: DEFAULT ':' sents .

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    $default  reduce using rule 47 (case_def)

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 165

   27 sents: sents . sents
   28      | FOR '(' sents ';' logical ';' sents ')' sents .

    SWITCH  shift, and go to state 48
    BREAK   shift, and go to state 49
    FOR     shift, and go to state 50
    IF      shift, and go to state 51
    DO      shift, and go to state 52
    WHILE   shift, and go to state 53
    RETURN  shift, and go to state 54
    PRINT   shift, and go to state 55
    ID      shift, and go to state 56
    '{'     shift, and go to state 57

    SWITCH    [reduce using rule 28 (sents)]
    BREAK     [reduce using rule 28 (sents)]
    FOR       [reduce using rule 28 (sents)]
    IF        [reduce using rule 28 (sents)]
    DO        [reduce using rule 28 (sents)]
    WHILE     [reduce using rule 28 (sents)]
    RETURN    [reduce using rule 28 (sents)]
    PRINT     [reduce using rule 28 (sents)]
    ID        [reduce using rule 28 (sents)]
    '{'       [reduce using rule 28 (sents)]
    $default  reduce using rule 28 (sents)

    sents   go to state 82
    ids     go to state 59
    arrays  go to state 60


State 166

   45 cases: CASE ':' NUMERO sents cases .

    $default  reduce using rule 45 (cases)
