State 83 conflicts: 10 shift/reduce
State 114 conflicts: 2 shift/reduce
State 144 conflicts: 10 shift/reduce
State 158 conflicts: 10 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 decs funcs

    3 $@2: %empty

    4 decs: type $@2 id_list ';' decs
    5     | %empty

    6 type: INT
    7     | FLOAT
    8     | DOUBLE
    9     | CHAR
   10     | VOID

   11 $@3: %empty

   12 type: STRUCT $@3 '{' decs '}'

   13 id_list: id_list ',' ID type_arr
   14        | ID type_arr

   15 type_arr: '[' NUMERO ']' type_arr
   16         | %empty

   17 $@4: %empty

   18 $@5: %empty

   19 funcs: FUNC type ID $@4 '(' params ')' '{' decs sents '}' $@5 funcs
   20      | %empty

   21 params: param_list
   22       | %empty

   23 $@6: %empty

   24 param_list: param_list ',' type $@6 ID param_arr

   25 $@7: %empty

   26 param_list: type $@7 ID param_arr

   27 param_arr: '[' ']' param_arr
   28          | %empty

   29 sents: sents sents

   30 $@8: %empty

   31 sents: FOR '(' sents ';' logical ';' sents $@8 ')' '{' sents '}'
   32      | DO '{' sents '}' WHILE '(' logical ')' ';'
   33      | WHILE '(' logical ')' '{' sents '}'
   34      | IF '(' logical ')' sents
   35      | IF '(' logical ')' sents ELSE sents

   36 $@9: %empty

   37 sents: SWITCH '(' expression $@9 ')' '{' cases case_def '}'
   38      | BREAK ';'
   39      | PRINT expression ';'
   40      | RETURN expression ';'
   41      | RETURN ';'
   42      | '{' sents '}'
   43      | ids '=' expression ';'

   44 ids: ID
   45    | arrays
   46    | ID '.' ID

   47 arrays: ID '[' expression ']'
   48       | arrays '[' expression ']'

   49 $@10: %empty

   50 cases: CASE ':' NUMERO data $@10 sents cases
   51      | %empty

   52 data: %empty

   53 case_def: DEFAULT ':' sents
   54         | %empty

   55 expression: expression '*' expression
   56           | expression '/' expression
   57           | expression '+' expression
   58           | expression '-' expression
   59           | expression '%' expression
   60           | ids
   61           | CADENA
   62           | NUMERO
   63           | FLOTANTE
   64           | CARACTER
   65           | ID '(' arguments ')'

   66 arguments: arguments ',' expression
   67          | expression

   68 logical: logical OR logical
   69        | logical AND logical
   70        | '!' logical
   71        | '(' logical ')'
   72        | expression relation expression
   73        | TRUE_P
   74        | FALSE_P

   75 relation: EQ
   76         | NEQ
   77         | GE
   78         | '>'
   79         | LE
   80         | '<'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 70
'%' (37) 59
'(' (40) 19 31 32 33 34 35 37 65 71
')' (41) 19 31 32 33 34 35 37 65 71
'*' (42) 55
'+' (43) 57
',' (44) 13 24 66
'-' (45) 58
'.' (46) 46
'/' (47) 56
':' (58) 50 53
';' (59) 4 31 32 38 39 40 41 43
'<' (60) 80
'=' (61) 43
'>' (62) 78
'[' (91) 15 27 47 48
']' (93) 15 27 47 48
'{' (123) 12 19 31 32 33 37 42
'}' (125) 12 19 31 32 33 37 42
error (256)
INT (258) 6
DOUBLE (259) 8
FLOAT (260) 7
CHAR (261) 9
VOID (262) 10
STRUCT (263) 12
CARACTER (264) 64
NUMERO (265) 15 50 62
FLOTANTE (266) 63
CADENA (267) 61
SWITCH (268) 37
CASE (269) 50
BREAK (270) 38
DEFAULT (271) 53
FOR (272) 31
IF (273) 34 35
ELSE (274) 35
DO (275) 32
WHILE (276) 32 33
FUNC (277) 19
RETURN (278) 40 41
PRINT (279) 39
TRUE_P (280) 73
FALSE_P (281) 74
ID (282) 13 14 19 24 26 44 46 47 65
LE (283) 79
GE (284) 77
EQ (285) 75
NEQ (286) 76
AND (287) 69
OR (288) 68
IFX (289)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 2, on right: 0
$@1 (56)
    on left: 1, on right: 2
decs (57)
    on left: 4 5, on right: 2 4 12 19
$@2 (58)
    on left: 3, on right: 4
type (59)
    on left: 6 7 8 9 10 12, on right: 4 19 24 26
$@3 (60)
    on left: 11, on right: 12
id_list (61)
    on left: 13 14, on right: 4 13
type_arr (62)
    on left: 15 16, on right: 13 14 15
funcs (63)
    on left: 19 20, on right: 2 19
$@4 (64)
    on left: 17, on right: 19
$@5 (65)
    on left: 18, on right: 19
params (66)
    on left: 21 22, on right: 19
param_list (67)
    on left: 24 26, on right: 21 24
$@6 (68)
    on left: 23, on right: 24
$@7 (69)
    on left: 25, on right: 26
param_arr (70)
    on left: 27 28, on right: 24 26 27
sents (71)
    on left: 29 31 32 33 34 35 37 38 39 40 41 42 43, on right: 19 29
    31 32 33 34 35 42 50 53
$@8 (72)
    on left: 30, on right: 31
$@9 (73)
    on left: 36, on right: 37
ids (74)
    on left: 44 45 46, on right: 43 60
arrays (75)
    on left: 47 48, on right: 45 48
cases (76)
    on left: 50 51, on right: 37 50
$@10 (77)
    on left: 49, on right: 50
data (78)
    on left: 52, on right: 50
case_def (79)
    on left: 53 54, on right: 37
expression (80)
    on left: 55 56 57 58 59 60 61 62 63 64 65, on right: 37 39 40 43
    47 48 55 56 57 58 59 66 67 72
arguments (81)
    on left: 66 67, on right: 65 66
logical (82)
    on left: 68 69 70 71 72 73 74, on right: 31 32 33 34 35 68 69 70
    71
relation (83)
    on left: 75 76 77 78 79 80, on right: 72


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . decs funcs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 5 (decs)

    decs  go to state 10
    type  go to state 11


State 3

    0 $accept: program $end .

    $default  accept


State 4

    6 type: INT .

    $default  reduce using rule 6 (type)


State 5

    8 type: DOUBLE .

    $default  reduce using rule 8 (type)


State 6

    7 type: FLOAT .

    $default  reduce using rule 7 (type)


State 7

    9 type: CHAR .

    $default  reduce using rule 9 (type)


State 8

   10 type: VOID .

    $default  reduce using rule 10 (type)


State 9

   12 type: STRUCT . $@3 '{' decs '}'

    $default  reduce using rule 11 ($@3)

    $@3  go to state 12


State 10

    2 program: $@1 decs . funcs

    FUNC  shift, and go to state 13

    $default  reduce using rule 20 (funcs)

    funcs  go to state 14


State 11

    4 decs: type . $@2 id_list ';' decs

    $default  reduce using rule 3 ($@2)

    $@2  go to state 15


State 12

   12 type: STRUCT $@3 . '{' decs '}'

    '{'  shift, and go to state 16


State 13

   19 funcs: FUNC . type ID $@4 '(' params ')' '{' decs sents '}' $@5 funcs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    type  go to state 17


State 14

    2 program: $@1 decs funcs .

    $default  reduce using rule 2 (program)


State 15

    4 decs: type $@2 . id_list ';' decs

    ID  shift, and go to state 18

    id_list  go to state 19


State 16

   12 type: STRUCT $@3 '{' . decs '}'

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 5 (decs)

    decs  go to state 20
    type  go to state 11


State 17

   19 funcs: FUNC type . ID $@4 '(' params ')' '{' decs sents '}' $@5 funcs

    ID  shift, and go to state 21


State 18

   14 id_list: ID . type_arr

    '['  shift, and go to state 22

    $default  reduce using rule 16 (type_arr)

    type_arr  go to state 23


State 19

    4 decs: type $@2 id_list . ';' decs
   13 id_list: id_list . ',' ID type_arr

    ';'  shift, and go to state 24
    ','  shift, and go to state 25


State 20

   12 type: STRUCT $@3 '{' decs . '}'

    '}'  shift, and go to state 26


State 21

   19 funcs: FUNC type ID . $@4 '(' params ')' '{' decs sents '}' $@5 funcs

    $default  reduce using rule 17 ($@4)

    $@4  go to state 27


State 22

   15 type_arr: '[' . NUMERO ']' type_arr

    NUMERO  shift, and go to state 28


State 23

   14 id_list: ID type_arr .

    $default  reduce using rule 14 (id_list)


State 24

    4 decs: type $@2 id_list ';' . decs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 5 (decs)

    decs  go to state 29
    type  go to state 11


State 25

   13 id_list: id_list ',' . ID type_arr

    ID  shift, and go to state 30


State 26

   12 type: STRUCT $@3 '{' decs '}' .

    $default  reduce using rule 12 (type)


State 27

   19 funcs: FUNC type ID $@4 . '(' params ')' '{' decs sents '}' $@5 funcs

    '('  shift, and go to state 31


State 28

   15 type_arr: '[' NUMERO . ']' type_arr

    ']'  shift, and go to state 32


State 29

    4 decs: type $@2 id_list ';' decs .

    $default  reduce using rule 4 (decs)


State 30

   13 id_list: id_list ',' ID . type_arr

    '['  shift, and go to state 22

    $default  reduce using rule 16 (type_arr)

    type_arr  go to state 33


State 31

   19 funcs: FUNC type ID $@4 '(' . params ')' '{' decs sents '}' $@5 funcs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 22 (params)

    type        go to state 34
    params      go to state 35
    param_list  go to state 36


State 32

   15 type_arr: '[' NUMERO ']' . type_arr

    '['  shift, and go to state 22

    $default  reduce using rule 16 (type_arr)

    type_arr  go to state 37


State 33

   13 id_list: id_list ',' ID type_arr .

    $default  reduce using rule 13 (id_list)


State 34

   26 param_list: type . $@7 ID param_arr

    $default  reduce using rule 25 ($@7)

    $@7  go to state 38


State 35

   19 funcs: FUNC type ID $@4 '(' params . ')' '{' decs sents '}' $@5 funcs

    ')'  shift, and go to state 39


State 36

   21 params: param_list .
   24 param_list: param_list . ',' type $@6 ID param_arr

    ','  shift, and go to state 40

    $default  reduce using rule 21 (params)


State 37

   15 type_arr: '[' NUMERO ']' type_arr .

    $default  reduce using rule 15 (type_arr)


State 38

   26 param_list: type $@7 . ID param_arr

    ID  shift, and go to state 41


State 39

   19 funcs: FUNC type ID $@4 '(' params ')' . '{' decs sents '}' $@5 funcs

    '{'  shift, and go to state 42


State 40

   24 param_list: param_list ',' . type $@6 ID param_arr

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    type  go to state 43


State 41

   26 param_list: type $@7 ID . param_arr

    '['  shift, and go to state 44

    $default  reduce using rule 28 (param_arr)

    param_arr  go to state 45


State 42

   19 funcs: FUNC type ID $@4 '(' params ')' '{' . decs sents '}' $@5 funcs

    INT     shift, and go to state 4
    DOUBLE  shift, and go to state 5
    FLOAT   shift, and go to state 6
    CHAR    shift, and go to state 7
    VOID    shift, and go to state 8
    STRUCT  shift, and go to state 9

    $default  reduce using rule 5 (decs)

    decs  go to state 46
    type  go to state 11


State 43

   24 param_list: param_list ',' type . $@6 ID param_arr

    $default  reduce using rule 23 ($@6)

    $@6  go to state 47


State 44

   27 param_arr: '[' . ']' param_arr

    ']'  shift, and go to state 48


State 45

   26 param_list: type $@7 ID param_arr .

    $default  reduce using rule 26 (param_list)


State 46

   19 funcs: FUNC type ID $@4 '(' params ')' '{' decs . sents '}' $@5 funcs

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 59
    ids     go to state 60
    arrays  go to state 61


State 47

   24 param_list: param_list ',' type $@6 . ID param_arr

    ID  shift, and go to state 62


State 48

   27 param_arr: '[' ']' . param_arr

    '['  shift, and go to state 44

    $default  reduce using rule 28 (param_arr)

    param_arr  go to state 63


State 49

   37 sents: SWITCH . '(' expression $@9 ')' '{' cases case_def '}'

    '('  shift, and go to state 64


State 50

   38 sents: BREAK . ';'

    ';'  shift, and go to state 65


State 51

   31 sents: FOR . '(' sents ';' logical ';' sents $@8 ')' '{' sents '}'

    '('  shift, and go to state 66


State 52

   34 sents: IF . '(' logical ')' sents
   35      | IF . '(' logical ')' sents ELSE sents

    '('  shift, and go to state 67


State 53

   32 sents: DO . '{' sents '}' WHILE '(' logical ')' ';'

    '{'  shift, and go to state 68


State 54

   33 sents: WHILE . '(' logical ')' '{' sents '}'

    '('  shift, and go to state 69


State 55

   40 sents: RETURN . expression ';'
   41      | RETURN . ';'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74
    ';'       shift, and go to state 75

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 77


State 56

   39 sents: PRINT . expression ';'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 78


State 57

   44 ids: ID .
   46    | ID . '.' ID
   47 arrays: ID . '[' expression ']'

    '['  shift, and go to state 79
    '.'  shift, and go to state 80

    $default  reduce using rule 44 (ids)


State 58

   42 sents: '{' . sents '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 81
    ids     go to state 60
    arrays  go to state 61


State 59

   19 funcs: FUNC type ID $@4 '(' params ')' '{' decs sents . '}' $@5 funcs
   29 sents: sents . sents

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58
    '}'     shift, and go to state 82

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 60

   43 sents: ids . '=' expression ';'

    '='  shift, and go to state 84


State 61

   45 ids: arrays .
   48 arrays: arrays . '[' expression ']'

    '['  shift, and go to state 85

    $default  reduce using rule 45 (ids)


State 62

   24 param_list: param_list ',' type $@6 ID . param_arr

    '['  shift, and go to state 44

    $default  reduce using rule 28 (param_arr)

    param_arr  go to state 86


State 63

   27 param_arr: '[' ']' param_arr .

    $default  reduce using rule 27 (param_arr)


State 64

   37 sents: SWITCH '(' . expression $@9 ')' '{' cases case_def '}'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 87


State 65

   38 sents: BREAK ';' .

    $default  reduce using rule 38 (sents)


State 66

   31 sents: FOR '(' . sents ';' logical ';' sents $@8 ')' '{' sents '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 88
    ids     go to state 60
    arrays  go to state 61


State 67

   34 sents: IF '(' . logical ')' sents
   35      | IF '(' . logical ')' sents ELSE sents

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    TRUE_P    shift, and go to state 89
    FALSE_P   shift, and go to state 90
    ID        shift, and go to state 74
    '('       shift, and go to state 91
    '!'       shift, and go to state 92

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 93
    logical     go to state 94


State 68

   32 sents: DO '{' . sents '}' WHILE '(' logical ')' ';'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 95
    ids     go to state 60
    arrays  go to state 61


State 69

   33 sents: WHILE '(' . logical ')' '{' sents '}'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    TRUE_P    shift, and go to state 89
    FALSE_P   shift, and go to state 90
    ID        shift, and go to state 74
    '('       shift, and go to state 91
    '!'       shift, and go to state 92

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 93
    logical     go to state 96


State 70

   64 expression: CARACTER .

    $default  reduce using rule 64 (expression)


State 71

   62 expression: NUMERO .

    $default  reduce using rule 62 (expression)


State 72

   63 expression: FLOTANTE .

    $default  reduce using rule 63 (expression)


State 73

   61 expression: CADENA .

    $default  reduce using rule 61 (expression)


State 74

   44 ids: ID .
   46    | ID . '.' ID
   47 arrays: ID . '[' expression ']'
   65 expression: ID . '(' arguments ')'

    '['  shift, and go to state 79
    '('  shift, and go to state 97
    '.'  shift, and go to state 80

    $default  reduce using rule 44 (ids)


State 75

   41 sents: RETURN ';' .

    $default  reduce using rule 41 (sents)


State 76

   60 expression: ids .

    $default  reduce using rule 60 (expression)


State 77

   40 sents: RETURN expression . ';'
   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    ';'  shift, and go to state 103


State 78

   39 sents: PRINT expression . ';'
   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    ';'  shift, and go to state 104


State 79

   47 arrays: ID '[' . expression ']'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 105


State 80

   46 ids: ID '.' . ID

    ID  shift, and go to state 106


State 81

   29 sents: sents . sents
   42      | '{' sents . '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58
    '}'     shift, and go to state 107

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 82

   19 funcs: FUNC type ID $@4 '(' params ')' '{' decs sents '}' . $@5 funcs

    $default  reduce using rule 18 ($@5)

    $@5  go to state 108


State 83

   29 sents: sents . sents
   29      | sents sents .

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    SWITCH    [reduce using rule 29 (sents)]
    BREAK     [reduce using rule 29 (sents)]
    FOR       [reduce using rule 29 (sents)]
    IF        [reduce using rule 29 (sents)]
    DO        [reduce using rule 29 (sents)]
    WHILE     [reduce using rule 29 (sents)]
    RETURN    [reduce using rule 29 (sents)]
    PRINT     [reduce using rule 29 (sents)]
    ID        [reduce using rule 29 (sents)]
    '{'       [reduce using rule 29 (sents)]
    $default  reduce using rule 29 (sents)

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 84

   43 sents: ids '=' . expression ';'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 109


State 85

   48 arrays: arrays '[' . expression ']'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 110


State 86

   24 param_list: param_list ',' type $@6 ID param_arr .

    $default  reduce using rule 24 (param_list)


State 87

   37 sents: SWITCH '(' expression . $@9 ')' '{' cases case_def '}'
   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 36 ($@9)

    $@9  go to state 111


State 88

   29 sents: sents . sents
   31      | FOR '(' sents . ';' logical ';' sents $@8 ')' '{' sents '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    ';'     shift, and go to state 112
    '{'     shift, and go to state 58

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 89

   73 logical: TRUE_P .

    $default  reduce using rule 73 (logical)


State 90

   74 logical: FALSE_P .

    $default  reduce using rule 74 (logical)


State 91

   71 logical: '(' . logical ')'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    TRUE_P    shift, and go to state 89
    FALSE_P   shift, and go to state 90
    ID        shift, and go to state 74
    '('       shift, and go to state 91
    '!'       shift, and go to state 92

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 93
    logical     go to state 113


State 92

   70 logical: '!' . logical

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    TRUE_P    shift, and go to state 89
    FALSE_P   shift, and go to state 90
    ID        shift, and go to state 74
    '('       shift, and go to state 91
    '!'       shift, and go to state 92

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 93
    logical     go to state 114


State 93

   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression
   72 logical: expression . relation expression

    LE   shift, and go to state 115
    GE   shift, and go to state 116
    EQ   shift, and go to state 117
    NEQ  shift, and go to state 118
    '>'  shift, and go to state 119
    '<'  shift, and go to state 120
    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    relation  go to state 121


State 94

   34 sents: IF '(' logical . ')' sents
   35      | IF '(' logical . ')' sents ELSE sents
   68 logical: logical . OR logical
   69        | logical . AND logical

    AND  shift, and go to state 122
    OR   shift, and go to state 123
    ')'  shift, and go to state 124


State 95

   29 sents: sents . sents
   32      | DO '{' sents . '}' WHILE '(' logical ')' ';'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58
    '}'     shift, and go to state 125

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 96

   33 sents: WHILE '(' logical . ')' '{' sents '}'
   68 logical: logical . OR logical
   69        | logical . AND logical

    AND  shift, and go to state 122
    OR   shift, and go to state 123
    ')'  shift, and go to state 126


State 97

   65 expression: ID '(' . arguments ')'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 127
    arguments   go to state 128


State 98

   57 expression: expression '+' . expression

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 129


State 99

   58 expression: expression '-' . expression

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 130


State 100

   59 expression: expression '%' . expression

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 131


State 101

   55 expression: expression '*' . expression

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 132


State 102

   56 expression: expression '/' . expression

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 133


State 103

   40 sents: RETURN expression ';' .

    $default  reduce using rule 40 (sents)


State 104

   39 sents: PRINT expression ';' .

    $default  reduce using rule 39 (sents)


State 105

   47 arrays: ID '[' expression . ']'
   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    ']'  shift, and go to state 134


State 106

   46 ids: ID '.' ID .

    $default  reduce using rule 46 (ids)


State 107

   42 sents: '{' sents '}' .

    $default  reduce using rule 42 (sents)


State 108

   19 funcs: FUNC type ID $@4 '(' params ')' '{' decs sents '}' $@5 . funcs

    FUNC  shift, and go to state 13

    $default  reduce using rule 20 (funcs)

    funcs  go to state 135


State 109

   43 sents: ids '=' expression . ';'
   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    ';'  shift, and go to state 136


State 110

   48 arrays: arrays '[' expression . ']'
   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102
    ']'  shift, and go to state 137


State 111

   37 sents: SWITCH '(' expression $@9 . ')' '{' cases case_def '}'

    ')'  shift, and go to state 138


State 112

   31 sents: FOR '(' sents ';' . logical ';' sents $@8 ')' '{' sents '}'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    TRUE_P    shift, and go to state 89
    FALSE_P   shift, and go to state 90
    ID        shift, and go to state 74
    '('       shift, and go to state 91
    '!'       shift, and go to state 92

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 93
    logical     go to state 139


State 113

   68 logical: logical . OR logical
   69        | logical . AND logical
   71        | '(' logical . ')'

    AND  shift, and go to state 122
    OR   shift, and go to state 123
    ')'  shift, and go to state 140


State 114

   68 logical: logical . OR logical
   69        | logical . AND logical
   70        | '!' logical .

    AND  shift, and go to state 122
    OR   shift, and go to state 123

    AND       [reduce using rule 70 (logical)]
    OR        [reduce using rule 70 (logical)]
    $default  reduce using rule 70 (logical)


State 115

   79 relation: LE .

    $default  reduce using rule 79 (relation)


State 116

   77 relation: GE .

    $default  reduce using rule 77 (relation)


State 117

   75 relation: EQ .

    $default  reduce using rule 75 (relation)


State 118

   76 relation: NEQ .

    $default  reduce using rule 76 (relation)


State 119

   78 relation: '>' .

    $default  reduce using rule 78 (relation)


State 120

   80 relation: '<' .

    $default  reduce using rule 80 (relation)


State 121

   72 logical: expression relation . expression

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 141


State 122

   69 logical: logical AND . logical

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    TRUE_P    shift, and go to state 89
    FALSE_P   shift, and go to state 90
    ID        shift, and go to state 74
    '('       shift, and go to state 91
    '!'       shift, and go to state 92

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 93
    logical     go to state 142


State 123

   68 logical: logical OR . logical

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    TRUE_P    shift, and go to state 89
    FALSE_P   shift, and go to state 90
    ID        shift, and go to state 74
    '('       shift, and go to state 91
    '!'       shift, and go to state 92

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 93
    logical     go to state 143


State 124

   34 sents: IF '(' logical ')' . sents
   35      | IF '(' logical ')' . sents ELSE sents

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 144
    ids     go to state 60
    arrays  go to state 61


State 125

   32 sents: DO '{' sents '}' . WHILE '(' logical ')' ';'

    WHILE  shift, and go to state 145


State 126

   33 sents: WHILE '(' logical ')' . '{' sents '}'

    '{'  shift, and go to state 146


State 127

   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression
   67 arguments: expression .

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 67 (arguments)


State 128

   65 expression: ID '(' arguments . ')'
   66 arguments: arguments . ',' expression

    ','  shift, and go to state 147
    ')'  shift, and go to state 148


State 129

   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   57           | expression '+' expression .
   58           | expression . '-' expression
   59           | expression . '%' expression

    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 57 (expression)


State 130

   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   58           | expression '-' expression .
   59           | expression . '%' expression

    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 58 (expression)


State 131

   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression
   59           | expression '%' expression .

    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    '%'  error (nonassociative)

    $default  reduce using rule 59 (expression)


State 132

   55 expression: expression . '*' expression
   55           | expression '*' expression .
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression

    $default  reduce using rule 55 (expression)


State 133

   55 expression: expression . '*' expression
   56           | expression . '/' expression
   56           | expression '/' expression .
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression

    $default  reduce using rule 56 (expression)


State 134

   47 arrays: ID '[' expression ']' .

    $default  reduce using rule 47 (arrays)


State 135

   19 funcs: FUNC type ID $@4 '(' params ')' '{' decs sents '}' $@5 funcs .

    $default  reduce using rule 19 (funcs)


State 136

   43 sents: ids '=' expression ';' .

    $default  reduce using rule 43 (sents)


State 137

   48 arrays: arrays '[' expression ']' .

    $default  reduce using rule 48 (arrays)


State 138

   37 sents: SWITCH '(' expression $@9 ')' . '{' cases case_def '}'

    '{'  shift, and go to state 149


State 139

   31 sents: FOR '(' sents ';' logical . ';' sents $@8 ')' '{' sents '}'
   68 logical: logical . OR logical
   69        | logical . AND logical

    AND  shift, and go to state 122
    OR   shift, and go to state 123
    ';'  shift, and go to state 150


State 140

   71 logical: '(' logical ')' .

    $default  reduce using rule 71 (logical)


State 141

   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression
   72 logical: expression relation expression .

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 72 (logical)


State 142

   68 logical: logical . OR logical
   69        | logical . AND logical
   69        | logical AND logical .

    $default  reduce using rule 69 (logical)


State 143

   68 logical: logical . OR logical
   68        | logical OR logical .
   69        | logical . AND logical

    AND  shift, and go to state 122

    $default  reduce using rule 68 (logical)


State 144

   29 sents: sents . sents
   34      | IF '(' logical ')' sents .
   35      | IF '(' logical ')' sents . ELSE sents

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    ELSE    shift, and go to state 151
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    SWITCH    [reduce using rule 34 (sents)]
    BREAK     [reduce using rule 34 (sents)]
    FOR       [reduce using rule 34 (sents)]
    IF        [reduce using rule 34 (sents)]
    DO        [reduce using rule 34 (sents)]
    WHILE     [reduce using rule 34 (sents)]
    RETURN    [reduce using rule 34 (sents)]
    PRINT     [reduce using rule 34 (sents)]
    ID        [reduce using rule 34 (sents)]
    '{'       [reduce using rule 34 (sents)]
    $default  reduce using rule 34 (sents)

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 145

   32 sents: DO '{' sents '}' WHILE . '(' logical ')' ';'

    '('  shift, and go to state 152


State 146

   33 sents: WHILE '(' logical ')' '{' . sents '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 153
    ids     go to state 60
    arrays  go to state 61


State 147

   66 arguments: arguments ',' . expression

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    ID        shift, and go to state 74

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 154


State 148

   65 expression: ID '(' arguments ')' .

    $default  reduce using rule 65 (expression)


State 149

   37 sents: SWITCH '(' expression $@9 ')' '{' . cases case_def '}'

    CASE  shift, and go to state 155

    $default  reduce using rule 51 (cases)

    cases  go to state 156


State 150

   31 sents: FOR '(' sents ';' logical ';' . sents $@8 ')' '{' sents '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 157
    ids     go to state 60
    arrays  go to state 61


State 151

   35 sents: IF '(' logical ')' sents ELSE . sents

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 158
    ids     go to state 60
    arrays  go to state 61


State 152

   32 sents: DO '{' sents '}' WHILE '(' . logical ')' ';'

    CARACTER  shift, and go to state 70
    NUMERO    shift, and go to state 71
    FLOTANTE  shift, and go to state 72
    CADENA    shift, and go to state 73
    TRUE_P    shift, and go to state 89
    FALSE_P   shift, and go to state 90
    ID        shift, and go to state 74
    '('       shift, and go to state 91
    '!'       shift, and go to state 92

    ids         go to state 76
    arrays      go to state 61
    expression  go to state 93
    logical     go to state 159


State 153

   29 sents: sents . sents
   33      | WHILE '(' logical ')' '{' sents . '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58
    '}'     shift, and go to state 160

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 154

   55 expression: expression . '*' expression
   56           | expression . '/' expression
   57           | expression . '+' expression
   58           | expression . '-' expression
   59           | expression . '%' expression
   66 arguments: arguments ',' expression .

    '+'  shift, and go to state 98
    '-'  shift, and go to state 99
    '%'  shift, and go to state 100
    '*'  shift, and go to state 101
    '/'  shift, and go to state 102

    $default  reduce using rule 66 (arguments)


State 155

   50 cases: CASE . ':' NUMERO data $@10 sents cases

    ':'  shift, and go to state 161


State 156

   37 sents: SWITCH '(' expression $@9 ')' '{' cases . case_def '}'

    DEFAULT  shift, and go to state 162

    $default  reduce using rule 54 (case_def)

    case_def  go to state 163


State 157

   29 sents: sents . sents
   31      | FOR '(' sents ';' logical ';' sents . $@8 ')' '{' sents '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    $default  reduce using rule 30 ($@8)

    sents   go to state 83
    $@8     go to state 164
    ids     go to state 60
    arrays  go to state 61


State 158

   29 sents: sents . sents
   35      | IF '(' logical ')' sents ELSE sents .

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    SWITCH    [reduce using rule 35 (sents)]
    BREAK     [reduce using rule 35 (sents)]
    FOR       [reduce using rule 35 (sents)]
    IF        [reduce using rule 35 (sents)]
    DO        [reduce using rule 35 (sents)]
    WHILE     [reduce using rule 35 (sents)]
    RETURN    [reduce using rule 35 (sents)]
    PRINT     [reduce using rule 35 (sents)]
    ID        [reduce using rule 35 (sents)]
    '{'       [reduce using rule 35 (sents)]
    $default  reduce using rule 35 (sents)

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 159

   32 sents: DO '{' sents '}' WHILE '(' logical . ')' ';'
   68 logical: logical . OR logical
   69        | logical . AND logical

    AND  shift, and go to state 122
    OR   shift, and go to state 123
    ')'  shift, and go to state 165


State 160

   33 sents: WHILE '(' logical ')' '{' sents '}' .

    $default  reduce using rule 33 (sents)


State 161

   50 cases: CASE ':' . NUMERO data $@10 sents cases

    NUMERO  shift, and go to state 166


State 162

   53 case_def: DEFAULT . ':' sents

    ':'  shift, and go to state 167


State 163

   37 sents: SWITCH '(' expression $@9 ')' '{' cases case_def . '}'

    '}'  shift, and go to state 168


State 164

   31 sents: FOR '(' sents ';' logical ';' sents $@8 . ')' '{' sents '}'

    ')'  shift, and go to state 169


State 165

   32 sents: DO '{' sents '}' WHILE '(' logical ')' . ';'

    ';'  shift, and go to state 170


State 166

   50 cases: CASE ':' NUMERO . data $@10 sents cases

    $default  reduce using rule 52 (data)

    data  go to state 171


State 167

   53 case_def: DEFAULT ':' . sents

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 172
    ids     go to state 60
    arrays  go to state 61


State 168

   37 sents: SWITCH '(' expression $@9 ')' '{' cases case_def '}' .

    $default  reduce using rule 37 (sents)


State 169

   31 sents: FOR '(' sents ';' logical ';' sents $@8 ')' . '{' sents '}'

    '{'  shift, and go to state 173


State 170

   32 sents: DO '{' sents '}' WHILE '(' logical ')' ';' .

    $default  reduce using rule 32 (sents)


State 171

   50 cases: CASE ':' NUMERO data . $@10 sents cases

    $default  reduce using rule 49 ($@10)

    $@10  go to state 174


State 172

   29 sents: sents . sents
   53 case_def: DEFAULT ':' sents .

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    $default  reduce using rule 53 (case_def)

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 173

   31 sents: FOR '(' sents ';' logical ';' sents $@8 ')' '{' . sents '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 175
    ids     go to state 60
    arrays  go to state 61


State 174

   50 cases: CASE ':' NUMERO data $@10 . sents cases

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    sents   go to state 176
    ids     go to state 60
    arrays  go to state 61


State 175

   29 sents: sents . sents
   31      | FOR '(' sents ';' logical ';' sents $@8 ')' '{' sents . '}'

    SWITCH  shift, and go to state 49
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58
    '}'     shift, and go to state 177

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61


State 176

   29 sents: sents . sents
   50 cases: CASE ':' NUMERO data $@10 sents . cases

    SWITCH  shift, and go to state 49
    CASE    shift, and go to state 155
    BREAK   shift, and go to state 50
    FOR     shift, and go to state 51
    IF      shift, and go to state 52
    DO      shift, and go to state 53
    WHILE   shift, and go to state 54
    RETURN  shift, and go to state 55
    PRINT   shift, and go to state 56
    ID      shift, and go to state 57
    '{'     shift, and go to state 58

    $default  reduce using rule 51 (cases)

    sents   go to state 83
    ids     go to state 60
    arrays  go to state 61
    cases   go to state 178


State 177

   31 sents: FOR '(' sents ';' logical ';' sents $@8 ')' '{' sents '}' .

    $default  reduce using rule 31 (sents)


State 178

   50 cases: CASE ':' NUMERO data $@10 sents cases .

    $default  reduce using rule 50 (cases)
